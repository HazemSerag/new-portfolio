{"version":3,"file":"static/js/433.57d2c2cc.chunk.js","mappings":"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","sources":["apiConfigs.js","webpack://portfolio/./src/components/UI/modal.module.css?5786","components/UI/modal.js","components/admin/editProject.js","webpack://portfolio/./src/components/admin/addProject.module.css?a690","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["exports.apiRootURL = \"http://localhost:8080/\"\nexports.tokenIndentation = \"Bearer \"","// extracted by mini-css-extract-plugin\nexport default {\"overlay-container\":\"modal_overlay-container__rFil6\",\"modal-button\":\"modal_modal-button__s5KGs\",\"overlay\":\"modal_overlay__Fj9Km\",\"modal-container\":\"modal_modal-container__EqWdH\",\"modal-content\":\"modal_modal-content__79W0Y\",\"error\":\"modal_error__TBtLk\",\"success\":\"modal_success__kxVdA\",\"modal-controls\":\"modal_modal-controls__Wh6Dw\"};","import { Fragment } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport classes from \"./modal.module.css\"\n\n\nconst ModalOverLay = (props) => {\n    return (\n        <Fragment>\n        <div className={classes[\"overlay-container\"]}>\n            <div className={classes.overlay} onClick={props.onClose}></div>\n            <div className={classes[\"modal-container\"]}>\n                <div className={`${classes[\"modal-content\"]} ${props.error?classes[\"error\"]:classes[\"success\"]}`}>\n                    {props.children}\n                </div>\n                <div className={classes[\"modal-controls\"]}>\n                    {\n                       props.onConfirm && <button className={classes[\"modal-button\"]} onClick={props?.onConfirm}>Confirm</button>\n                    }\n                    <button className={classes[\"modal-button\"]} onClick={props.onClose}>Close</button>\n                </div>\n            </div>\n        </div>\n        </Fragment>\n    )\n} \n\nconst portalElement = document.getElementById(\"overlays\")\n\nconst Modal = (props) => {\n    return (\n        ReactDOM.createPortal(<ModalOverLay onClose={props.onClose} error={props.error} onConfirm={props?.onConfirm}>{props.children}</ModalOverLay>, portalElement)\n    )\n}\n\nexport default Modal;","import { Fragment, useContext, useEffect, useRef, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport classes from \"./addProject.module.css\";\nimport Spinner from \"../UI/spinner\";\nimport Modal from \"../UI/modal\";\nimport { apiRootURL, tokenIndentation } from \"../../apiConfigs\";\nimport AuthContext from \"../../store/authContexts\";\n\nconst EditProject = () => {\n  const { projectId } = useParams();\n  const [project, setProject] = useState(null);\n  const [technologies, setTechnologies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [responseMessage, setresponseMessage] = useState(\"\");\n\n  const authCTX = useContext(AuthContext)\n\n  const history = useHistory();\n\n  const projectTitle = useRef();\n  const client = useRef();\n  const category = useRef();\n  const link = useRef();\n  const description = useRef();\n  const fromDate = useRef();\n  const toDate = useRef();\n  const servicesRef = useRef([]);\n  const technologiesRef = useRef([]);\n\n  let mainImage;\n  let projectImages;\n  let imagesEdited = false;\n\n  const services = [\n    {\n      name: \"Design\",\n      value: \"Design\",\n    },\n    {\n      name: \"Development\",\n      value: \"Development\",\n    },\n    {\n      name: \"Deploy\",\n      value: \"Deploy\",\n    },\n    {\n      name: \"Support\",\n      value: \"Support\",\n    },\n  ];\n\n  useEffect(() => {\n    fetch(apiRootURL+\"development/technologies\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((jsonRes) => {\n        const fetchedTechs = [...jsonRes];\n        return setTechnologies(() => {\n          return [...fetchedTechs];\n        });\n      })\n      .catch((err) => {\n        setError(true);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    let errorExists = false\n    fetch(apiRootURL+\"development/projects/\" + projectId)\n      .then((res) => {\n        if (!res.ok) {\n          errorExists = true\n        }\n        return res.json();\n      })\n      .then((jsonRes) => {\n        if (errorExists) {\n          const error = new Error(\"Error: \" + jsonRes.message);\n          throw error;\n        }\n        const fetchedProject = jsonRes;\n        return setProject(fetchedProject);\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(err.message);\n        setLoading(false);\n      });\n  }, [projectId]);\n\n  if (project) {\n    mainImage = [project.mainImageUrl];\n    if(project.projectImagesUrls&& project.projectImagesUrls.length>0){\n        projectImages = [...project.projectImagesUrls];\n    }\n  }\n  const editProjectHandler = async (event) => {\n    event.preventDefault();\n\n    const projectDetailObject = {\n      title: projectTitle.current.value,\n      clientName: client.current.value,\n      category: category.current.value,\n      link: link.current.value,\n      description: description.current.value,\n      from: fromDate.current.value,\n      to: toDate.current.value,\n      mainImage: mainImage,\n      images: projectImages,\n      services: servicesRef.current\n        .filter((service) => {\n          return service.checked;\n        })\n        .map((service) => {\n          return service.defaultValue;\n        }),\n      technologies: technologiesRef.current\n        .filter((technology) => {\n          return technology.checked;\n        })\n        .map((technology) => {\n          return technology.defaultValue;\n        }),\n    };\n\n    const method = \"PUT\";\n    const URL = apiRootURL+\"development/projects/\" + projectId + \"?folder=projects\";\n\n    if (imagesEdited) {\n      const formData = new FormData();\n      Object.entries(projectDetailObject).map(([key, value]) => {\n        if (\n          (key === \"technologies\" ||\n            key === \"services\" ||\n            key === \"mainImage\" ||\n            key === \"images\") &&\n          projectDetailObject[key]\n        ) {\n          return projectDetailObject[key].map((v) => {\n            return formData.append(key, v);\n          });\n        } else {\n          return formData.append(key, value);\n        }\n      });\n\n      try {\n        let errorExists = false\n        const res = await fetch(URL, { method: method, body: formData, headers : { Authorization : tokenIndentation+authCTX.token} });\n        setLoading(true);\n        if (!res.ok) {\n          errorExists = true\n        }\n        const resJson = await res.json();\n        if (errorExists) {\n          const error = new Error(\"Error: \" + resJson.message);\n          throw error;\n        }\n        setresponseMessage(resJson.message);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        setError(err.message);\n      }\n    } else {\n      try {\n        let errorExists = false\n        const res = await fetch(URL, {\n          method: method,\n          body: JSON.stringify(projectDetailObject),\n          headers: { \"content-type\": \"application/json\", Authorization : tokenIndentation+authCTX.token},\n        });\n        setLoading(true);\n        if (!res.ok) {\n          errorExists = true\n        }\n        const resJson = await res.json();\n        if (errorExists) {\n          const error = new Error(\"Error: \" + resJson.message);\n          throw error;\n        }\n        setresponseMessage(resJson.message);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        setError(err.message);\n      }\n    }\n  };\n\n  const closeModal = () => {\n    setError(\"\");\n    setresponseMessage(\"\");\n    history.push(\"/projects/\" + projectId);\n  };\n\n  const navigateHome = () => {\n    setError(\"\");\n    setresponseMessage(\"\");\n    history.push(\"/\");\n  }\n\n  const droppMain = (files) => {\n    imagesEdited = true;\n    mainImage = files;\n  };\n\n  const droppImages = (files) => {\n    imagesEdited = true;\n    projectImages = files;\n  };\n\n  let content = loading ? (\n    <Spinner />\n  ) : (\n    <div className={`${classes[\"add-project-page\"]} bg-grey-neu`}>\n      <form\n        className={`${classes[\"add-project-form\"]} neum-form`}\n        onSubmit={editProjectHandler}\n      >\n        <h3 className={classes[\"form-title\"]}>Add Project</h3>\n\n        {/* project title */}\n        <div className=\"form-input\">\n          <input\n            ref={projectTitle}\n            className=\"form-input-neu\"\n            defaultValue={project.title}\n            type=\"text\"\n            placeholder=\"Project Title\"\n          />\n        </div>\n\n        <div className=\"form-row\">\n          {/* client name */}\n          <div className=\"form-input-50\">\n            <input\n              ref={client}\n              className=\"form-input-neu\"\n              defaultValue={project.client}\n              type=\"text\"\n              placeholder=\"Client Name\"\n            />\n          </div>\n\n          {/* Category */}\n          <div className=\"form-input-50\">\n            <input\n              ref={category}\n              className=\"form-input-neu ml-auto\"\n              defaultValue={project.category}\n              type=\"text\"\n              placeholder=\"Category\"\n            />\n          </div>\n        </div>\n\n        {/* Link */}\n        <div className=\"form-input\">\n          <input\n            ref={link}\n            className=\"form-input-neu\"\n            type=\"text\"\n            defaultValue={project.link}\n            placeholder=\"Link\"\n          />\n        </div>\n\n        {/* Description */}\n        <div className=\"form-input\">\n          <textarea\n            ref={description}\n            className=\"form-input-neu\"\n            defaultValue={project.description}\n            type=\"text\"\n            placeholder=\"Description\"\n          />\n        </div>\n\n        {/* Date from */}\n        <div className=\"form-input\">\n          <h5>From</h5>\n          <input\n            ref={fromDate}\n            className=\"form-input-neu\"\n            type=\"date\"\n            defaultValue={project.from}\n            placeholder=\"from\"\n          />\n        </div>\n\n        {/* Date to */}\n        <div className=\"form-input\">\n          <h5>To</h5>\n          <input\n            ref={toDate}\n            className=\"form-input-neu\"\n            type=\"date\"\n            defaultValue={project.to}\n            placeholder=\"to\"\n          />\n        </div>\n\n        {/* Main Image */}\n        <Dropzone multiple={false} accept=\"image/*\" onDrop={droppMain}>\n          {({ getRootProps, getInputProps }) => (\n            <section className={classes[\"dropzone-container\"]}>\n              <div className=\"dropzone-area-neu\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                <p>Drop Main Image</p>\n              </div>\n              <aside>\n                <div className={classes[\"file-list\"]}>\n                  <img\n                    className={classes[\"main-preview-img\"]}\n                    src={apiRootURL + project.mainImageUrl}\n                    alt={\"project main\"}\n                  />\n                </div>\n              </aside>\n            </section>\n          )}\n        </Dropzone>\n\n        {/* Images */}\n        <Dropzone onDrop={droppImages}>\n          {({ getRootProps, getInputProps }) => (\n            <section className={classes[\"dropzone-container\"]}>\n              <div className=\"dropzone-area-neu\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                <p>Drop Images</p>\n              </div>\n              <aside>\n                {project.projectImagesUrls && (\n                  <div className={classes[\"file-list\"]}>\n                    {project.projectImagesUrls.map((img, i) => {\n                      return (\n                        <img\n                          className={classes[\"preview-img\"]}\n                          key={i}\n                          src={apiRootURL + img}\n                          alt={\"Project\"}\n                        />\n                      );\n                    })}\n                  </div>\n                )}\n              </aside>\n            </section>\n          )}\n        </Dropzone>\n\n        {/* Services */}\n        <h5>Services: </h5>\n        <div className=\"form-input\">\n          {services.map((service, i) => {\n            return (\n              <div key={i} className=\"form-check-neu d-inline mx-1 w-sm\">\n                <input\n                  ref={(el) => (servicesRef.current[i] = el)}\n                  className=\"checkbox-neu\"\n                  defaultChecked={project.services.includes(services[i].value)}\n                  type=\"checkbox\"\n                  value={service.value}\n                  id=\"services\"\n                />\n                <label\n                  className=\"checkbox-label-neu\"\n                  htmlFor=\"flexCheckDefault\"\n                >\n                  {service.name}\n                </label>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Technologies */}\n        <h5>Technologies: </h5>\n        <div className=\"form-input\">\n          {technologies.map((tech, i) => {\n            return (\n              <div key={tech._id} className=\"form-check-neu d-inline mx-1 w-sm\">\n                <input\n                  ref={(el) => (technologiesRef.current[i] = el)}\n                  className=\"checkbox-neu\"\n                  defaultChecked={project.technologies\n                    .map((t) => {\n                      return t._id;\n                    })\n                    .includes(technologies[i]._id)}\n                  placeholder={tech.name}\n                  type=\"checkbox\"\n                  value={tech._id}\n                  id=\"technologies\"\n                />\n                <label\n                  className=\"checkbox-label-neu\"\n                  htmlFor=\"flexCheckDefault\"\n                >\n                  {tech.name}\n                </label>\n              </div>\n            );\n          })}\n        </div>\n\n        <div className=\"mt-3\">\n          <button className=\"neu\" type=\"submit\">\n            ADD IT\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      {error !== \"\" && (\n        <Modal error={true} onClose={navigateHome}>\n          {error}\n        </Modal>\n      )}\n      {responseMessage !== \"\" && (\n        <Modal error={false} onClose={closeModal}>\n          {responseMessage}\n        </Modal>\n      )}\n      {content}\n    </Fragment>\n  );\n};\n\nexport default EditProject;\n","// extracted by mini-css-extract-plugin\nexport default {\"add-project-page\":\"addProject_add-project-page__SqikI\",\"add-project-form\":\"addProject_add-project-form__oudA8\",\"form-title\":\"addProject_form-title__Ndeyo\",\"dropzone-area\":\"addProject_dropzone-area__pRzY9\",\"form-input-neu\":\"addProject_form-input-neu__Ka7Us\",\"dropzone-container\":\"addProject_dropzone-container__vbvVi\",\"file-list\":\"addProject_file-list__aWoiT\",\"preview-img\":\"addProject_preview-img__eIQCH\",\"main-preview-img\":\"addProject_main-preview-img__UeM1Y\"};","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["exports","ModalOverLay","props","Fragment","className","classes","onClick","onClose","error","children","onConfirm","portalElement","document","getElementById","ReactDOM","mainImage","projectImages","projectId","useParams","useState","project","setProject","technologies","setTechnologies","loading","setLoading","setError","responseMessage","setresponseMessage","authCTX","useContext","AuthContext","history","useHistory","projectTitle","useRef","client","category","link","description","fromDate","toDate","servicesRef","technologiesRef","imagesEdited","services","name","value","useEffect","fetch","apiRootURL","then","res","json","jsonRes","fetchedTechs","catch","err","errorExists","ok","Error","message","mainImageUrl","projectImagesUrls","length","editProjectHandler","event","preventDefault","projectDetailObject","title","current","clientName","from","to","images","filter","service","checked","map","defaultValue","technology","method","URL","formData","FormData","Object","entries","key","append","v","body","headers","Authorization","tokenIndentation","token","resJson","JSON","stringify","content","onSubmit","ref","type","placeholder","multiple","accept","onDrop","files","getRootProps","getInputProps","src","alt","img","i","el","defaultChecked","includes","id","htmlFor","tech","t","_id","push","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}