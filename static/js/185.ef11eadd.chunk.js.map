{"version":3,"file":"static/js/185.ef11eadd.chunk.js","mappings":"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","sources":["apiConfigs.js","webpack://portfolio/./src/components/UI/modal.module.css?5786","components/UI/modal.js","hooks/useInput.js","webpack://portfolio/./src/pages/admin/admin.module.css?4806","components/admin/loginForm.js","pages/admin/admin.js","webpack://portfolio/./src/components/admin/addTechnologyForm.module.css?20c4"],"sourcesContent":["exports.apiRootURL = \"http://localhost:8080/\"\nexports.tokenIndentation = \"Bearer \"","// extracted by mini-css-extract-plugin\nexport default {\"overlay-container\":\"modal_overlay-container__rFil6\",\"modal-button\":\"modal_modal-button__s5KGs\",\"overlay\":\"modal_overlay__Fj9Km\",\"modal-container\":\"modal_modal-container__EqWdH\",\"modal-content\":\"modal_modal-content__79W0Y\",\"error\":\"modal_error__TBtLk\",\"success\":\"modal_success__kxVdA\",\"modal-controls\":\"modal_modal-controls__Wh6Dw\"};","import { Fragment } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport classes from \"./modal.module.css\"\n\n\nconst ModalOverLay = (props) => {\n    return (\n        <Fragment>\n        <div className={classes[\"overlay-container\"]}>\n            <div className={classes.overlay} onClick={props.onClose}></div>\n            <div className={classes[\"modal-container\"]}>\n                <div className={`${classes[\"modal-content\"]} ${props.error?classes[\"error\"]:classes[\"success\"]}`}>\n                    {props.children}\n                </div>\n                <div className={classes[\"modal-controls\"]}>\n                    {\n                       props.onConfirm && <button className={classes[\"modal-button\"]} onClick={props?.onConfirm}>Confirm</button>\n                    }\n                    <button className={classes[\"modal-button\"]} onClick={props.onClose}>Close</button>\n                </div>\n            </div>\n        </div>\n        </Fragment>\n    )\n} \n\nconst portalElement = document.getElementById(\"overlays\")\n\nconst Modal = (props) => {\n    return (\n        ReactDOM.createPortal(<ModalOverLay onClose={props.onClose} error={props.error} onConfirm={props?.onConfirm}>{props.children}</ModalOverLay>, portalElement)\n    )\n}\n\nexport default Modal;","import { useState } from 'react'\n\nfunction useInput(validationFunction) {\n    const [ enteredValue, setEnteredValue ] = useState(\"\")\n    const [ isTouched, setIsTouched ] = useState(false)\n\n    const valueIsValid = validationFunction(enteredValue)\n    const hasError = !valueIsValid && isTouched\n\n    const valueChangeHandler = (event) => {\n        setEnteredValue(event.target.value)\n    }\n\n    const inputBlurHandler = () => {\n        setIsTouched(true)\n    }\n\n    const reset = () => {\n        setEnteredValue(\"\")\n        setIsTouched(false)\n    }\n    \n  return {\n      value:enteredValue,\n      isValid:valueIsValid,\n      hasError,\n      valueChangeHandler,\n      inputBlurHandler,\n      reset\n  }\n}\n\nexport default useInput","// extracted by mini-css-extract-plugin\nexport default {\"admin-page\":\"admin_admin-page__lTpzL\"};","import { Fragment, useRef, useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport classes from \"./addTechnologyForm.module.css\";\nimport Modal from \"../UI/modal\";\nimport Spinner from \"../UI/spinner\";\nimport { apiRootURL } from \"../../apiConfigs\";\nimport AuthContext from \"../../store/authContexts\";\nimport useInput from \"../../hooks/useInput\";\n\nconst LoginForm = () => {\n  const email = useRef();\n  const password = useRef();\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const authCTX = useContext(AuthContext);\n\n  const history = useHistory();\n  let formValidity = false;\n\n  const {\n    value: enterdEmail,\n    isValid: enterdEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    hasError: emailInputHasError,\n  } = useInput((email) => {\n    return String(email)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  });\n\n  const { \n    value:enterdPassword,\n    isValid:enterdPasswordIsValid,\n    valueChangeHandler:passwordChangeHandler,\n    inputBlurHandler:passwordBlurHandler,\n    hasError:passwordInputHasError,\n} = useInput((value)=>{return value.trim().length > 7})\n\n  formValidity = enterdEmailIsValid && enterdPasswordIsValid\n  const loginHandler = async (event) => {\n    event.preventDefault();\n    if(!formValidity){\n      return\n    }\n    setLoading(true);\n    const METHOD = \"POST\";\n    const URL = apiRootURL + \"auth/login\";\n    const signUpDetails = {\n      password: password.current.value,\n      email: email.current.value,\n    };\n    let errorExists = false;\n    try {\n      const res = await fetch(URL, {\n        body: JSON.stringify(signUpDetails),\n        method: METHOD,\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      });\n      if (!res.ok) {\n        errorExists = true;\n      }\n      const resJson = await res.json();\n      if (errorExists) {\n        const error = new Error(\"Error: \" + resJson.message);\n        throw error;\n      }\n      setLoading(false);\n      authCTX.login(resJson.token);\n      history.push(\"/\");\n    } catch (err) {\n      setLoading(false);\n      setError(err.message);\n    }\n  };\n\n  const closeModal = () => {\n    setError(\"\");\n    setLoading(false);\n  };\n\n  return (\n    <Fragment>\n      <form className=\"neum-form\" onSubmit={loginHandler}>\n        <h3 className={classes[\"form-title\"]}>Login</h3>\n\n        <div className=\"form-input\">\n          <input\n            ref={email}\n            className={emailInputHasError ? \"invalid-input form-input-neu\" : \"form-input-neu\"}\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler}\n            value={enterdEmail}\n            type=\"text\"\n            placeholder=\"email\"\n          ></input>\n          {emailInputHasError && (\n            <p className={\"error-text\"}>Please enter a valid Email.</p>\n          )}\n        </div>\n\n        <div className=\"form-input\">\n{/*           <input\n            ref={password}\n            className=\"form-input-neu\"\n            type=\"password\"\n            placeholder=\"password\"\n          ></input> */}\n          <input\n            ref={password}\n            className={passwordInputHasError ? \"invalid-input form-input-neu\" : \"form-input-neu\"}\n            onChange={passwordChangeHandler}\n            onBlur={passwordBlurHandler}\n            value={enterdPassword}\n            type=\"password\"\n            placeholder=\"password\"\n          ></input>\n          {passwordInputHasError && (\n            <p className={\"error-text\"}>Password should be at least 8 chars.</p>\n          )}\n        </div>\n        <div className={classes.submit}>\n          <button className=\"neu\" type=\"submit\">\n            LOGIN\n          </button>\n        </div>\n      </form>\n      {loading && <Spinner />}\n      {error !== \"\" && (\n        <Modal error={true} onClose={closeModal}>\n          {error}\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nexport default LoginForm;\n","import classes from \"./admin.module.css\";\nimport LoginForm from \"../../components/admin/loginForm\";\n\nconst Admin = () => {\n  return (\n    <div className={classes[\"admin-page\"]}>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Admin;\n","// extracted by mini-css-extract-plugin\nexport default {\"technologies-form-container\":\"addTechnologyForm_technologies-form-container__KltrF\",\"form-title\":\"addTechnologyForm_form-title__w3vWP\",\"dropzone-container\":\"addTechnologyForm_dropzone-container__5Nk9c\",\"file-list\":\"addTechnologyForm_file-list__NGoQt\"};"],"names":["exports","ModalOverLay","props","Fragment","className","classes","onClick","onClose","error","children","onConfirm","portalElement","document","getElementById","ReactDOM","validationFunction","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","formValidity","email","useRef","password","setError","loading","setLoading","authCTX","useContext","AuthContext","history","useHistory","useInput","String","toLowerCase","match","enterdEmail","enterdEmailIsValid","emailChangeHandler","emailBlurHandler","emailInputHasError","trim","length","enterdPassword","enterdPasswordIsValid","passwordChangeHandler","passwordBlurHandler","passwordInputHasError","loginHandler","preventDefault","URL","apiRootURL","signUpDetails","current","errorExists","fetch","body","JSON","stringify","method","headers","res","ok","json","resJson","Error","message","login","token","push","onSubmit","ref","onChange","onBlur","type","placeholder"],"sourceRoot":""}