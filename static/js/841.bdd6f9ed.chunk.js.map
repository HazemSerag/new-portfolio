{"version":3,"file":"static/js/841.bdd6f9ed.chunk.js","mappings":"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","sources":["apiConfigs.js","webpack://portfolio/./src/components/UI/modal.module.css?5786","components/UI/modal.js","hooks/useInput.js","webpack://portfolio/./src/pages/contactMe.module.css?6581","pages/contactMe.js"],"sourcesContent":["exports.apiRootURL = \"http://localhost:8080/\"\nexports.tokenIndentation = \"Bearer \"","// extracted by mini-css-extract-plugin\nexport default {\"overlay-container\":\"modal_overlay-container__rFil6\",\"modal-button\":\"modal_modal-button__s5KGs\",\"overlay\":\"modal_overlay__Fj9Km\",\"modal-container\":\"modal_modal-container__EqWdH\",\"modal-content\":\"modal_modal-content__79W0Y\",\"error\":\"modal_error__TBtLk\",\"success\":\"modal_success__kxVdA\",\"modal-controls\":\"modal_modal-controls__Wh6Dw\"};","import { Fragment } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport classes from \"./modal.module.css\"\n\n\nconst ModalOverLay = (props) => {\n    return (\n        <Fragment>\n        <div className={classes[\"overlay-container\"]}>\n            <div className={classes.overlay} onClick={props.onClose}></div>\n            <div className={classes[\"modal-container\"]}>\n                <div className={`${classes[\"modal-content\"]} ${props.error?classes[\"error\"]:classes[\"success\"]}`}>\n                    {props.children}\n                </div>\n                <div className={classes[\"modal-controls\"]}>\n                    {\n                       props.onConfirm && <button className={classes[\"modal-button\"]} onClick={props?.onConfirm}>Confirm</button>\n                    }\n                    <button className={classes[\"modal-button\"]} onClick={props.onClose}>Close</button>\n                </div>\n            </div>\n        </div>\n        </Fragment>\n    )\n} \n\nconst portalElement = document.getElementById(\"overlays\")\n\nconst Modal = (props) => {\n    return (\n        ReactDOM.createPortal(<ModalOverLay onClose={props.onClose} error={props.error} onConfirm={props?.onConfirm}>{props.children}</ModalOverLay>, portalElement)\n    )\n}\n\nexport default Modal;","import { useState } from 'react'\n\nfunction useInput(validationFunction) {\n    const [ enteredValue, setEnteredValue ] = useState(\"\")\n    const [ isTouched, setIsTouched ] = useState(false)\n\n    const valueIsValid = validationFunction(enteredValue)\n    const hasError = !valueIsValid && isTouched\n\n    const valueChangeHandler = (event) => {\n        setEnteredValue(event.target.value)\n    }\n\n    const inputBlurHandler = () => {\n        setIsTouched(true)\n    }\n\n    const reset = () => {\n        setEnteredValue(\"\")\n        setIsTouched(false)\n    }\n    \n  return {\n      value:enteredValue,\n      isValid:valueIsValid,\n      hasError,\n      valueChangeHandler,\n      inputBlurHandler,\n      reset\n  }\n}\n\nexport default useInput","// extracted by mini-css-extract-plugin\nexport default {\"contact-me\":\"contactMe_contact-me__mmFZd\",\"details\":\"contactMe_details__5M3Mv\",\"greeting\":\"contactMe_greeting__S5cAl\",\"contact-details\":\"contactMe_contact-details__U7wm8\",\"title\":\"contactMe_title__iQoTI\",\"container\":\"contactMe_container__BPf3a\",\"location\":\"contactMe_location__G9Oip\",\"submit\":\"contactMe_submit__UBnWw\",\"email\":\"contactMe_email__Xg-IJ\",\"contact-me-form\":\"contactMe_contact-me-form__ipofa\",\"form-container\":\"contactMe_form-container__5aulh\",\"subtitle\":\"contactMe_subtitle__C01eB\",\"form-input\":\"contactMe_form-input__NclvU\",\"form-row\":\"contactMe_form-row__C8SD6\",\"half\":\"contactMe_half__OXrir\"};","import { Fragment, useRef, useState } from \"react\";\nimport Modal from \"../components/UI/modal\";\nimport Spinner from \"../components/UI/spinner\";\n\nimport classes from \"./contactMe.module.css\"\nimport { apiRootURL } from \"../apiConfigs\";\nimport useInput from \"../hooks/useInput\";\n\nconst ContactMe = () => {\n    const [ loading, setLoading ] = useState(false)\n    const [ error, setError ] = useState(\"\")\n    const [ responseMessage, setresponseMessage] = useState(null);\n    const name = useRef()\n    const email = useRef()\n    const subject = useRef()\n    const content = useRef()\n    let formValidity = false\n\n    const { \n        value:enterdName,\n        isValid:enterdNameIsValid,\n        valueChangeHandler:nameChangeHandler,\n        inputBlurHandler:nameBlurHandler,\n        hasError:nameInputHasError,\n        reset:restNameInput\n    } = useInput((value)=>{return value.trim() !== \"\"})\n\n    const { \n        value:enterdEmail,\n        isValid:enterdEmailIsValid,\n        valueChangeHandler:emailChangeHandler,\n        inputBlurHandler:emailBlurHandler,\n        hasError:emailInputHasError,\n        reset:restEmailInput\n    } = useInput((email) => {return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)})\n\n    const { \n        value:enterdSubject,\n        isValid:enterdSubjectIsValid,\n        valueChangeHandler:subjectChangeHandler,\n        inputBlurHandler:subjectBlurHandler,\n        hasError:subjectInputHasError,\n        reset:restSubjectInput\n    } = useInput((value)=>{return value.trim() !== \"\"})\n\n    const { \n        value:enterdMessage,\n        isValid:enterdMessageIsValid,\n        valueChangeHandler:messageChangeHandler,\n        inputBlurHandler:messageBlurHandler,\n        hasError:messageInputHasError,\n        reset:restMessageInput\n    } = useInput((value)=>{return value.trim() !== \"\"})\n\n    formValidity = enterdNameIsValid && enterdEmailIsValid && enterdSubjectIsValid && enterdMessageIsValid\n    \n    const contactMeHandler = (event) => {\n        event.preventDefault()\n        if(!formValidity){\n            return\n        }\n        setLoading(true)\n\n        const messageDetails = {\n            name:name.current.value,\n            email:email.current.value,\n            subject:subject.current.value,\n            content:content.current.value\n        }\n\n        const URL = apiRootURL + \"public/message\"\n        const METHOD = \"POST\"\n\n        let errorExists = false\n        fetch(URL, {\n            method:METHOD,\n            body:JSON.stringify(messageDetails),\n            headers: {\n                \"content-type\":\"application/json\"\n            }\n        }).then((res)=>{\n            if (!res.ok) {\n                errorExists = true;\n              }\n              return res.json();\n        }).then(res=>{\n            if (errorExists) {\n                const newError = new Error(\"Error: \" + res.message);\n                throw newError;\n            }\n                setresponseMessage(res.message);\n                restNameInput();\n                restEmailInput();\n                restSubjectInput();\n                restMessageInput();\n                setLoading(false);\n        }).catch(err => {\n            setLoading(false);\n            setError(err.message);\n        })\n    }\n\n    const closeModal = () => {\n        setError(false)\n        setLoading(false)\n        setresponseMessage(null)\n    }\n\n    return (\n        <Fragment>\n            <div className=\"contact-me-page\">\n                <div className={classes[\"contact-me\"]}>\n                    <div className={classes[\"container\"]}>\n                        <div className={classes.title}>Contact</div>\n                        <div className={classes.details}>\n                            <div className={classes.greeting}>\n                                There is nothing like having a face to face talk. I build brands people trust. My values and ideas bring people and brands together.\n                                <span className={classes.location} onClick={()=>{window.open(\"https://www.google.com/maps/place/R%C3%BCttenscheid,+Essen/@51.4310205,6.9959507,15z/data=!3m1!4b1!4m5!3m4!1s0x47b8c2d407e67ee7:0x438f5d6840bd9f3!8m2!3d51.4296308!4d7.0039007\",\"_blank\")}}>Open in google Maps</span>\n                            </div>\n                            <div className={classes[\"contact-details\"]}>\n                                <div className={classes[\"address\"]}>Rüttenscheid 45130, Essen, Deutschland</div>\n                                <div className={classes[\"number\"]}>+49 175 2936231</div>\n                                <div onClick={e=>{ e.preventDefault();window.location.href = \"mailto:Hazemseragdev@gmail.com\"; }} className={classes[\"email\"]}>Hazemseragdev@gmail.com</div>\n                                <div className={classes[\"icons\"]}></div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={classes[\"contact-me-form\"]}>\n                    <div className=\"title\">Let's start!</div>\n                    <div className={classes[\"subtitle\"]}>It is really interesting to work with you.</div>\n                    <div className={classes[\"form-container\"]}>\n                        <form onSubmit={contactMeHandler}>\n                            <div className={classes[\"form-row\"]}>\n                                <div className={`${classes[\"form-input\"]} ${classes[\"half\"]}`}>\n                                    <input ref={name} className={nameInputHasError?\"invalid-input\":\"\"} onChange={nameChangeHandler} onBlur={nameBlurHandler} value={enterdName} type=\"text\" placeholder=\"NAME\"></input>\n                                    {nameInputHasError && <p className={\"error-text\"}>Please enter a valid name.</p>}\n                                </div>\n                                <div className={`${classes[\"form-input\"]} ${classes[\"half\"]}`}>\n                                    <input ref={email} className={emailInputHasError?\"invalid-input\":\"\"} onChange={emailChangeHandler} onBlur={emailBlurHandler} value={enterdEmail} type=\"email\" placeholder=\"EMAIL\"></input>\n                                    {emailInputHasError && <p className={\"error-text\"}>Please enter a valid Email.</p>}\n\n                                </div>\n                            </div>\n                            <div className={classes[\"form-input\"]}>\n                                <input ref={subject} className={subjectInputHasError?\"invalid-input\":\"\"} onChange={subjectChangeHandler} onBlur={subjectBlurHandler} value={enterdSubject} type=\"text\" placeholder=\"SUBJECT\"></input>\n                                {subjectInputHasError && <p className={\"error-text\"}>Please enter a valid subject.</p>}\n                            </div>\n                            <div className={classes[\"form-input\"]}>\n                                <textarea ref={content} className={messageInputHasError?\"invalid-input\":\"\"} onChange={messageChangeHandler} onBlur={messageBlurHandler} value={enterdMessage} placeholder=\"MESSAGE\"></textarea>\n                                {messageInputHasError && <p className={\"error-text\"}>Please enter a valid message.</p>}\n\n                            </div>\n                            <div className={classes.submit}>\n                                <button className={formValidity?\"\":\"disabled-button\"} disabled={!formValidity} type=\"submit\">SEND IT</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            {loading && <Spinner />}\n            {error && <Modal error={true} onClose={closeModal}>{error}</Modal>}\n            {responseMessage && <Modal error={false} onClose={closeModal}>{responseMessage}</Modal>}\n        </Fragment>\n    )\n}\n\nexport default ContactMe;"],"names":["exports","ModalOverLay","props","Fragment","className","classes","onClick","onClose","error","children","onConfirm","portalElement","document","getElementById","ReactDOM","validationFunction","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","formValidity","loading","setLoading","setError","responseMessage","setresponseMessage","name","useRef","email","subject","content","useInput","trim","enterdName","enterdNameIsValid","nameChangeHandler","nameBlurHandler","nameInputHasError","restNameInput","String","toLowerCase","match","enterdEmail","enterdEmailIsValid","emailChangeHandler","emailBlurHandler","emailInputHasError","restEmailInput","enterdSubject","enterdSubjectIsValid","subjectChangeHandler","subjectBlurHandler","subjectInputHasError","restSubjectInput","enterdMessage","enterdMessageIsValid","messageChangeHandler","messageBlurHandler","messageInputHasError","restMessageInput","closeModal","window","open","e","preventDefault","location","href","onSubmit","messageDetails","current","URL","apiRootURL","errorExists","fetch","method","body","JSON","stringify","headers","then","res","ok","json","Error","message","catch","err","ref","onChange","onBlur","type","placeholder","disabled"],"sourceRoot":""}