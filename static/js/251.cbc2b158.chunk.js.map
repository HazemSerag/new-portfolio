{"version":3,"file":"static/js/251.cbc2b158.chunk.js","mappings":"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","sources":["apiConfigs.js","webpack://portfolio/./src/components/UI/modal.module.css?5786","components/UI/modal.js","components/admin/addTechnologyForm.js","webpack://portfolio/./src/components/admin/addTechnologyForm.module.css?20c4"],"sourcesContent":["exports.apiRootURL = \"http://localhost:8080/\"\nexports.tokenIndentation = \"Bearer \"","// extracted by mini-css-extract-plugin\nexport default {\"overlay-container\":\"modal_overlay-container__rFil6\",\"modal-button\":\"modal_modal-button__s5KGs\",\"overlay\":\"modal_overlay__Fj9Km\",\"modal-container\":\"modal_modal-container__EqWdH\",\"modal-content\":\"modal_modal-content__79W0Y\",\"error\":\"modal_error__TBtLk\",\"success\":\"modal_success__kxVdA\",\"modal-controls\":\"modal_modal-controls__Wh6Dw\"};","import { Fragment } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport classes from \"./modal.module.css\"\n\n\nconst ModalOverLay = (props) => {\n    return (\n        <Fragment>\n        <div className={classes[\"overlay-container\"]}>\n            <div className={classes.overlay} onClick={props.onClose}></div>\n            <div className={classes[\"modal-container\"]}>\n                <div className={`${classes[\"modal-content\"]} ${props.error?classes[\"error\"]:classes[\"success\"]}`}>\n                    {props.children}\n                </div>\n                <div className={classes[\"modal-controls\"]}>\n                    {\n                       props.onConfirm && <button className={classes[\"modal-button\"]} onClick={props?.onConfirm}>Confirm</button>\n                    }\n                    <button className={classes[\"modal-button\"]} onClick={props.onClose}>Close</button>\n                </div>\n            </div>\n        </div>\n        </Fragment>\n    )\n} \n\nconst portalElement = document.getElementById(\"overlays\")\n\nconst Modal = (props) => {\n    return (\n        ReactDOM.createPortal(<ModalOverLay onClose={props.onClose} error={props.error} onConfirm={props?.onConfirm}>{props.children}</ModalOverLay>, portalElement)\n    )\n}\n\nexport default Modal;","import { Fragment, useRef, useState, useContext } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nimport classes from \"./addTechnologyForm.module.css\";\nimport Spinner from \"../UI/spinner\";\nimport Modal from \"../UI/modal\";\nimport { apiRootURL, tokenIndentation } from \"../../apiConfigs\";\nimport AuthContext from \"../../store/authContexts\";\n\nconst AddTechnologyForm = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [responseMessage, setresponseMessage] = useState(\"\");\n\n  const techName = useRef();\n\n  const authCTX = useContext(AuthContext)\n\n  const oneIcon = [];\n\n  const addTechnologyHandler = async (event) => {\n    setLoading(true);\n    event.preventDefault();\n    const method = \"POST\";\n    const URL = apiRootURL+\"development/technology?folder=technologies\";\n    const formData = new FormData();\n    formData.append(\"technology\", techName.current.value);\n    if (oneIcon.length !== 0) {\n      formData.append(\"image\", oneIcon[0]);\n    }\n    let errorExists = false;\n\n    try {\n      const res = await fetch(URL, { method: method, body: formData, headers : { Authorization : tokenIndentation+authCTX.token}})\n      if (!res.ok) {\n        errorExists = true;\n      }\n      const resJson = await res.json();\n      if (errorExists) {\n        const error = new Error(\"Error: \" + resJson.message);\n        throw error;\n      }\n      setresponseMessage(resJson.message);\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setError(err.message);\n    }\n  };\n\n  const dropped = (files) => {\n    oneIcon.push(files[0]);\n  };\n\n  const closeModal = () => {\n    setError(\"\");\n    setresponseMessage(\"\");\n  };\n\n  let content = loading ? (\n    <Spinner />\n  ) : (\n    <div className={classes[\"technologies-form-container\"]}>\n            <form className=\"neum-form\" onSubmit={addTechnologyHandler}>\n      <h3 className={classes[\"form-title\"]}>Add Technology</h3>\n\n      <div className=\"form-input\">\n        <input\n          ref={techName}\n          className=\"form-input-neu\"\n          type=\"text\"\n          placeholder=\"Tech\"\n        ></input>\n      </div>\n\n      <Dropzone onDrop={dropped}>\n        {({ getRootProps, getInputProps }) => (\n          <section className={classes[\"dropzone-container\"]}>\n            <div className=\"dropzone-area-neu\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <p>Drag 'n' drop some files here</p>\n            </div>\n            <aside>\n              <ul className={classes[\"file-list\"]}>\n                {oneIcon.map((file) => (\n                  <li key={file.path}>\n                    {file.path} - {file.size} bytes\n                  </li>\n                ))}\n              </ul>\n            </aside>\n          </section>\n        )}\n      </Dropzone>\n\n      <div className={classes.submit}>\n        <button className=\"neu\" type=\"submit\">ADD IT</button>\n      </div>\n    </form>\n    </div>\n  );\n\n  return (\n    <Fragment>\n      {error !== \"\" && <Modal error={true} onClose={closeModal}>{error}</Modal>}\n      {responseMessage !== \"\" && (\n        <Modal error={false} onClose={closeModal}>{responseMessage}</Modal>\n      )}\n      {content}\n    </Fragment>\n  );\n};\n\nexport default AddTechnologyForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"technologies-form-container\":\"addTechnologyForm_technologies-form-container__KltrF\",\"form-title\":\"addTechnologyForm_form-title__w3vWP\",\"dropzone-container\":\"addTechnologyForm_dropzone-container__5Nk9c\",\"file-list\":\"addTechnologyForm_file-list__NGoQt\"};"],"names":["exports","ModalOverLay","props","Fragment","className","classes","onClick","onClose","error","children","onConfirm","portalElement","document","getElementById","ReactDOM","useState","loading","setLoading","setError","responseMessage","setresponseMessage","techName","useRef","authCTX","useContext","AuthContext","oneIcon","addTechnologyHandler","event","preventDefault","URL","apiRootURL","formData","FormData","append","current","value","length","errorExists","fetch","method","body","headers","Authorization","tokenIndentation","token","res","ok","json","resJson","Error","message","closeModal","content","onSubmit","ref","type","placeholder","onDrop","files","push","getRootProps","getInputProps","map","file","path","size"],"sourceRoot":""}