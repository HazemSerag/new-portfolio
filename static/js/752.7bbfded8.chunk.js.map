{"version":3,"file":"static/js/752.7bbfded8.chunk.js","mappings":"4FAAAA,EAAQ,EAAa,yBACrBA,EAAQ,EAAmB,W,0FCA3B,EAAoC,iCAApC,EAAoF,4BAApF,EAA0H,uBAA1H,EAAmK,+BAAnK,EAAkN,6BAAlN,EAAuP,qBAAvP,EAAsR,uBAAtR,EAA8T,8B,SCKxTC,EAAe,SAACC,GAClB,OACI,SAAC,EAAAC,SAAD,WACA,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAiBC,QAASJ,EAAMK,WAChD,iBAAKH,UAAWC,EAAhB,WACI,gBAAKD,UAAS,UAAKC,EAAL,YAAiCH,EAAMM,MAAMH,EAAiBA,GAA5E,SACKH,EAAMO,YAEX,iBAAKL,UAAWC,EAAhB,UAEOH,EAAMQ,YAAa,mBAAQN,UAAWC,EAAyBC,QAAO,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAOQ,UAA5D,sBAEtB,mBAAQN,UAAWC,EAAyBC,QAASJ,EAAMK,QAA3D,+BAQdI,EAAgBC,SAASC,eAAe,YAQ9C,EANc,SAACX,GACX,OACIY,EAAAA,cAAsB,SAACb,EAAD,CAAcM,QAASL,EAAMK,QAASC,MAAON,EAAMM,MAAOE,UAAS,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAOQ,UAA5E,SAAwFR,EAAMO,WAA0BE,K,8IC9BtJ,GAAgB,gBAAgB,gCAAgC,qBAAqB,sC,sCCgFrF,EAvEiB,WACf,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOP,EAAP,KAAcY,EAAd,KAEMC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,IAE3BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAMC,EAAAA,EAAa,uBACrBC,GAAc,EAClBC,MAAMH,EAAK,CAAEI,QAAS,CAAEC,cAAeC,EAAAA,EAAmBV,EAAQW,SAC/DC,MAAK,SAACC,GAIL,OAHKA,EAAIC,KACPR,GAAc,GAETO,EAAIE,UAEZH,MAAK,SAACC,GACL,GAAIP,EAEF,MADiB,IAAIU,MAAM,UAAYH,EAAII,SAG7C,OAAOrB,GAAY,WACjB,OAAO,OAAIiB,SAGdD,MAAK,WACJd,GAAW,MAEZoB,OAAM,SAACC,GACNrB,GAAW,GACXC,EAASoB,EAAIF,cAEhB,CAACjB,EAAQW,QAKZ,OACE,UAAC,EAAA7B,SAAD,YACE,gBAAKC,UAAU,iBAAf,UACE,iBAAKA,UAAWC,EAAAA,sBAAgC,gBAAhD,WACE,eAAID,UAAWC,EAAAA,MAAf,sBACCa,IAAW,SAAC,IAAD,IACXF,EAASyB,KAAI,SAACC,GACb,OACE,UAAC,KAAD,CACEtC,UAAWC,EAAAA,iBAA2B,0BAEtCsC,GAAI,uBAAyBD,EAAIE,IAHnC,WAKE,yBACCF,EAAIG,WAEL,0BACE,gBAAKC,IAAKC,EAAUC,IAAI,aAPrBN,EAAIE,aAclBpC,IACC,SAAC,IAAD,CAAOA,OAAO,EAAMD,QA5BP,WACjBa,GAAS,IA2BL,SACGZ,S,svZCtEI,SAASyC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["apiConfigs.js","webpack://portfolio/./src/components/UI/modal.module.css?5786","components/UI/modal.js","webpack://portfolio/./src/components/admin/messages.module.css?046a","components/admin/messages.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["exports.apiRootURL = \"http://localhost:8080/\"\nexports.tokenIndentation = \"Bearer \"","// extracted by mini-css-extract-plugin\nexport default {\"overlay-container\":\"modal_overlay-container__rFil6\",\"modal-button\":\"modal_modal-button__s5KGs\",\"overlay\":\"modal_overlay__Fj9Km\",\"modal-container\":\"modal_modal-container__EqWdH\",\"modal-content\":\"modal_modal-content__79W0Y\",\"error\":\"modal_error__TBtLk\",\"success\":\"modal_success__kxVdA\",\"modal-controls\":\"modal_modal-controls__Wh6Dw\"};","import { Fragment } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport classes from \"./modal.module.css\"\n\n\nconst ModalOverLay = (props) => {\n    return (\n        <Fragment>\n        <div className={classes[\"overlay-container\"]}>\n            <div className={classes.overlay} onClick={props.onClose}></div>\n            <div className={classes[\"modal-container\"]}>\n                <div className={`${classes[\"modal-content\"]} ${props.error?classes[\"error\"]:classes[\"success\"]}`}>\n                    {props.children}\n                </div>\n                <div className={classes[\"modal-controls\"]}>\n                    {\n                       props.onConfirm && <button className={classes[\"modal-button\"]} onClick={props?.onConfirm}>Confirm</button>\n                    }\n                    <button className={classes[\"modal-button\"]} onClick={props.onClose}>Close</button>\n                </div>\n            </div>\n        </div>\n        </Fragment>\n    )\n} \n\nconst portalElement = document.getElementById(\"overlays\")\n\nconst Modal = (props) => {\n    return (\n        ReactDOM.createPortal(<ModalOverLay onClose={props.onClose} error={props.error} onConfirm={props?.onConfirm}>{props.children}</ModalOverLay>, portalElement)\n    )\n}\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nexport default {\"msg-container\":\"messages_msg-container__TMNi7\",\"messages-container\":\"messages_messages-container__KTXk3\"};","import { Fragment, useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Modal from \"../UI/modal\";\nimport Spinner from \"../UI/spinner\";\nimport classes from \"./messages.module.css\";\nimport { apiRootURL, tokenIndentation } from \"../../apiConfigs\";\nimport AuthContext from \"../../store/authContexts\";\nimport inboxPic from \"../../assets/inbox.png\";\n\nconst Messages = () => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const authCTX = useContext(AuthContext);\n\n  useEffect(() => {\n    const URL = apiRootURL + \"development/messages\";\n    let errorExists = false;\n    fetch(URL, { headers: { Authorization: tokenIndentation + authCTX.token } })\n      .then((res) => {\n        if (!res.ok) {\n          errorExists = true;\n        }\n        return res.json();\n      })\n      .then((res) => {\n        if (errorExists) {\n          const newError = new Error(\"Error: \" + res.message);\n          throw newError;\n        }\n        return setMessages(() => {\n          return [...res];\n        });\n      })\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setError(err.message);\n      });\n  }, [authCTX.token]);\n\n  const closeModal = () => {\n    setError(false);\n  };\n  return (\n    <Fragment>\n      <div className=\"neum-container\">\n        <div className={classes[\"messages-container\"] + \" neum-element\"}>\n          <h1 className={classes[\"hello\"]}>Messages</h1>\n          {loading && <Spinner />}\n          {messages.map((msg) => {\n            return (\n              <Link\n                className={classes[\"msg-container\"] + \" link-item neum-element\"}\n                key={msg._id}\n                to={\"/dashboard/messages/\" + msg._id}\n              >\n                <div>\n                {msg.content}\n                  </div>\n                <div>\n                  <img src={inboxPic} alt=\"icon\"/>\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n      {error && (\n        <Modal error={true} onClose={closeModal}>\n          {error}\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Messages;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["exports","ModalOverLay","props","Fragment","className","classes","onClick","onClose","error","children","onConfirm","portalElement","document","getElementById","ReactDOM","useState","messages","setMessages","loading","setLoading","setError","authCTX","useContext","AuthContext","useEffect","URL","apiRootURL","errorExists","fetch","headers","Authorization","tokenIndentation","token","then","res","ok","json","Error","message","catch","err","map","msg","to","_id","content","src","inboxPic","alt","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}